# -*- coding: utf-8 -*-
"""Analysis of the top 300 Startups in India

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RI0NIHgQrcYyjDan05Uw7Mv6NPNmsOz0
"""

import numpy as np
import pandas as pd

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set(style="darkgrid",rc = {'axes.facecolor': '#FBEAEB'})
pd.options.display.max_columns=50

df=pd.read_csv("/content/Startups1.csv")
df.sample()

df.shape

df.columns

df.info()

df.isnull().sum()

import missingno as msno
msno.bar(df,color="red",fontsize=25);

df.duplicated().sum()

for i in df.columns:
    print(i,"----------",df[i].unique(),"--------",df[i].nunique())

df.describe().T

sns.heatmap(df.corr(),annot=True);

df.sample()

df.drop(columns=["Unnamed: 0","Description"],inplace=True)

df["Industries_type 1"]=df["Industries"].str.split(",",expand=True)[0]
df["Industries_type 2"]=df["Industries"].str.split(",",expand=True)[1]
df[df["Industries_type 2"].isnull()]

l=[29,52,105,134,137,154,189,201,273,277]
for i in l:
    df["Industries_type 2"].iloc[i]="None"

df["Industries_type 2"].isnull().sum()

df["age"]=df["Starting Year"].max()-df["Starting Year"]

sns.distplot(df["age"]);

df["age_category"]=pd.cut(df.age,[-1,5,15,np.inf],labels=["new company","old company","older company"])

df.sample()

plt.figure(figsize=(16,10))
ax=sns.countplot(x="Starting Year",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('which year maximum startups are launched', fontdict={'fontsize': 28, 'color': 'black', 'fontweight': 'bold'}, bbox=dict(boxstyle='round', facecolor='grey', alpha=0.5,edgecolor='black'));

for p in ax.patches:
    ax.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=16,
                xytext = (0, 10),
                textcoords = 'offset points')

from wordcloud import WordCloud as word
wc = word(background_color='white', width=1000, height=400,colormap="twilight_shifted")
wc.generate_from_frequencies(df["City"].value_counts())
plt.figure(figsize=(10,13),dpi=100)
plt.imshow(wc)
plt.axis('off')
plt.show()

x=df["Founders"].value_counts().sort_values(ascending=False).head(4)
print(x)
color=sns.color_palette("twilight_shifted")
plt.figure(figsize=(7,7))
plt.pie(x,labels=x.index,autopct="%0.0f%%",textprops={"fontsize":15},wedgeprops={"width":0.5},shadow=True,colors=color,explode=[0,0,0.15,0.15])
plt.legend(loc="lower center",bbox_to_anchor=(0.5,-0.15),ncol=4)
plt.title('Founders with 2 or more startups', fontdict={'fontsize': 28, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

plt.figure(figsize=(18,10))
ax=sns.countplot(x="No. of Employees",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('No of Employees', fontdict={'fontsize': 38, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for p in ax.patches:
    ax.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

plt.figure(figsize=(18,10))
ax=sns.countplot(x="Funding Round",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('Funding Rounds', fontdict={'fontsize': 38, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for p in ax.patches:
    ax.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

plt.figure(figsize=(18,10))
ax=sns.countplot(x="No. of Investors",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('No. of Investors', fontdict={'fontsize': 38, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for p in ax.patches:
    ax.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

b=df["Industries_type 1"].value_counts().head(10)
plt.figure(figsize=(18,20),dpi=100)
plt.subplot(2,2,1)
ax=sns.countplot(x="Industries_type 1",data=df,order=b.index,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('Top 10 Industries type 1', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));
for p in ax.patches:
    ax.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

plt.subplot(2,2,2)
c=df["Industries_type 2"].value_counts().head(10)
ay=sns.countplot(x="Industries_type 2",data=df,order=c.index,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('Top 10 Industries type 2', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for y in ay.patches:
    ay.annotate(format(y.get_height(), '.0f'),
                (y.get_x() + y.get_width() / 2., y.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

plt.figure(figsize=(25,22),dpi=100)
plt.subplot(2,2,1)
ab= sns.countplot(x="age",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('Age', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for p in ab.patches:
    ab.annotate(format(p.get_height(), '.0f'),
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha = 'center', va = 'center',fontsize=15,
                xytext = (0, 10),
                textcoords = 'offset points')


plt.subplot(2,2,2)
ac=sns.countplot(x="age_category",data=df,palette='twilight_shifted',edgecolor="black")
plt.xticks(rotation=45)
plt.title('Age category', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

for j in ac.patches:
    ac.annotate(format(j.get_height(), '.0f'),
                (j.get_x() + j.get_width() / 2., j.get_height()),
                ha = 'center', va = 'center',fontsize=20,
                xytext = (0, 10),
                textcoords = 'offset points')

df[df["Funding Amount in $"]==df["Funding Amount in $"].max()]

df.groupby(["Starting Year","Company","City"])["Funding Amount in $"].max().sort_values(ascending=False).to_frame().head(10).style.background_gradient(cmap='twilight_shifted')

df.groupby("City")["Funding Amount in $"].sum().sort_values(ascending=False).to_frame().style.background_gradient(cmap='twilight_shifted')

plt.figure(figsize=(15,15))
sns.barplot(x="Funding Amount in $",y="City",edgecolor="black",estimator=sum,data=df,palette='twilight_shifted');
plt.title('City With Highest funding', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold'}, bbox=dict( facecolor='grey', alpha=0.5,edgecolor='black'));

df[df["No. of Employees"]=="10001+"][["Company","Funding Amount in $","City","Industries_type 1","No. of Investors"]].sort_values(by="Funding Amount in $",ascending=False).style.background_gradient(cmap='twilight_shifted')

df[df["age"]==df["age"].max()]

df[df["age"]>15][["Company","age","age_category"]].sort_values(by="age",ascending=False).style.background_gradient(cmap='twilight_shifted')

df[["Funding Amount in $","No. of Investors","age"]].agg(["mean","min","max"]).style.background_gradient(cmap='twilight_shifted')

df[df["Funding Amount in $"]== 0]

df[df["Funding Round"]>15][["Company","Starting Year","Funding Round","Funding Amount in $","Industries_type 1"]].sort_values(by="Funding Round",ascending=False).style.background_gradient(cmap="twilight_shifted")

df[df["No. of Investors"]>25][["Company","Starting Year","No. of Investors","Industries_type 1"]].sort_values(by="No. of Investors",ascending=False).style.background_gradient(cmap="twilight_shifted")

df.to_csv("startups.csv")

